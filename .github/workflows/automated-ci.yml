name: Automated CI

on:
  push:
    branches: [ "develop", "main", "feature/**", "bug/**" ]
  pull_request:
    branches: [ "develop", "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        #os: [macos-latest, ubuntu-latest, windows-latest]
        os: [ubuntu-latest, windows-latest]
        include:
        #- os: macos-latest
        #  BUILD_PRESET: macos-release
        - os: ubuntu-latest
          BUILD_PRESET: linux-x64-release-gcc
        - os: windows-latest
          BUILD_PRESET: windows-x64-release-msvc

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'true'

    - uses: actions/cache@v3
      with :
        path: |
            ${{github.workspace}}/deps/vcpkg/buildtrees
            ${{github.workspace}}/deps/vcpkg/downloads
            ${{github.workspace}}/deps/vcpkg/packages
        key: ${{ runner.os }}-build-${{ matrix.BUILD_PRESET }}-${{ hashFiles('vcpkg.json') }}

    - if: matrix.os == 'ubuntu-latest'
      run: |
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        sudo add-apt-repository -y 'deb http://apt.llvm.org/jammy/  llvm-toolchain-jammy-16 main'
        sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
        sudo apt update
        sudo apt install -y build-essential ca-certificates cmake curl git gpg linux-libc-dev pkg-config rpm wget unzip zip
        sudo apt install -y clang-16 clang-tools-16 clang-16-doc libclang-common-16-dev libclang-16-dev libclang1-16 clang-format-16 python3-clang-16 clangd-16 clang-tidy-16 lld-16 libc++-16-dev libc++abi-16-dev clang-tidy-16
        sudo apt install -y gcc-13 g++-13
    
    - uses: lukka/get-cmake@latest
    - uses: ilammy/msvc-dev-cmd@v1
      with:
        toolset: 14.36
    - uses: lukka/run-vcpkg@v11
      with: 
        vcpkgDirectory: '${{ github.workspace }}/deps/vcpkg'
    - uses: lukka/run-cmake@v10
      with:
        configurePreset: '${{matrix.BUILD_PRESET}}'
        buildPreset: '${{matrix.BUILD_PRESET}}'

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest --test-dir ${{github.workspace}}/build/${{matrix.BUILD_PRESET}}/test --output-on-failure

    - name: Package
      working-directory: ${{github.workspace}}/build
      # Execute packaging defined by the CMake configuration
      run: cmake --build ${{github.workspace}}/build/${{matrix.BUILD_PRESET}} --target pack-aqualink-automate 

