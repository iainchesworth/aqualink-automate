name: Automated CI

on:
  push:
    branches: [ "develop", "main", "feature/**", "bug/**" ]
  pull_request:
    branches: [ "develop", "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, windows-2022]
        compiler: [gcc-13] # llvm-17 is not yet available in aminya/setup-cpp
        include:
        - os: windows-2022
          compiler: msvc

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'true'
    
    - name: Configure CMake Preset
      id: set_cmake_preset
      shell: bash
      run: |
        COMPILER=$(echo "${{ matrix.compiler }}" | awk -F- '{print $1}')
        if [ "$COMPILER" = "llvm" ]; then
          COMPILER="clang"
        fi
        PLATFORM=$(echo "${{ matrix.os }}" | awk -F- '{print $1}')
        if [ "$PLATFORM" = "ubuntu" ]; then
          PLATFORM="linux"
        fi
        echo "::set-output name=cmake_preset::ci-$COMPILER-$PLATFORM-x86_64"

    - uses: aminya/setup-cpp@v1
      with:
        compiler: ${{ matrix.compiler }}
        vcvarsall: ${{ contains(matrix.os, 'windows') }}
        cmake: true
        ninja: true
        vcpkg: false
        ccache: false
        clangtidy: false
        cppcheck: false
        doxygen: false
        gcovr: false
        make: false
        task: false
        nala: false

    - uses: lukka/run-vcpkg@v11
      with: 
        vcpkgDirectory: '${{github.workspace}}/deps/vcpkg'

    - uses: lukka/run-cmake@v10
      with:
        configurePreset: '${{ steps.set_cmake_preset.outputs.cmake_preset }}'
        buildPreset: '${{ steps.set_cmake_preset.outputs.cmake_preset }}'
        testPreset: '${{ steps.set_cmake_preset.outputs.cmake_preset }}'

    - name: Package
      working-directory: ${{github.workspace}}/build
      # Execute packaging defined by the CMake configuration
      run: cmake --build ${{github.workspace}}/build/${{ steps.set_cmake_preset.outputs.cmake_preset }} --target pack-aqualink-automate 
