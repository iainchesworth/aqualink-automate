name: Automated CI

on:
  push:
    branches: [ "develop", "main", "feature/**", "bug/**" ]
  pull_request:
    branches: [ "develop", "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, windows-2022]
        compiler: [llvm-17.0.1, gcc-13.2.0]
        include:
        #- os: macos-12
        #  CMAKE_PRESET: ci-clang-macos-x86_64
        - os: ubuntu-22.04
          CMAKE_PRESET: ci-gcc-linux-x86_64
        - os: windows-2022
          compiler: "msvc"
          CMAKE_PRESET: ci-msvc-windows-x86_64

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'true'

    #- name: Install Linux Dependencies i.e. Build Tools
    #  if: matrix.os == 'ubuntu-latest'
    #  run: |
    #    sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
    #    sudo apt update
    #    sudo apt install -y build-essential ca-certificates cmake curl git gpg linux-libc-dev pkg-config rpm wget unzip zip
    #    sudo apt install -y gcc-13 g++-13
    
    - uses: aminya/setup-cpp@v1
      with:
        compiler: ${{ matrix.compiler }}
        vcvarsall: ${{ contains(matrix.os, 'windows') }}
        cmake: true
        ninja: true
        vcpkg: false
        ccache: false
        clangtidy: false
        cppcheck: false
        doxygen: false
        gcovr: false
        make: false
        task: false
        nala: false

    - uses: lukka/run-vcpkg@v11
      with: 
        vcpkgDirectory: '${{github.workspace}}/deps/vcpkg'

    - uses: lukka/run-cmake@v10
      with:
        configurePreset: '${{matrix.CMAKE_PRESET}}'
        buildPreset: '${{matrix.CMAKE_PRESET}}'
        testPreset: '${{matrix.CMAKE_PRESET}}'

    - name: Package
      working-directory: ${{github.workspace}}/build
      # Execute packaging defined by the CMake configuration
      run: cmake --build ${{github.workspace}}/build/${{matrix.CMAKE_PRESET}} --target pack-aqualink-automate 
