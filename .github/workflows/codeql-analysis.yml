name: "CodeQL"

on:
  push:
    branches: [ main, develop ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ main, develop ]
  schedule:
    - cron: '35 15 * * 5'

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'cpp' ]
        
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
      with:
        submodules: 'true'
      
    - name: Install Dependencies i.e. Build Tools + gcc/g++ 13.x
      run: |
        sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
        sudo apt update
        sudo apt install -y build-essential ca-certificates cmake curl git gpg linux-libc-dev pkg-config rpm wget unzip zip
        sudo apt install -y gcc-13 g++-13

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}

    - name: Checkout Repository
      uses: actions/checkout@v3
      with:
        submodules: 'true'

    - name: Check Cache for vcpkg Binaries
      uses: actions/cache@v3
      with :
        path: |
            ${{github.workspace}}/deps/vcpkg/buildtrees
            ${{github.workspace}}/deps/vcpkg/downloads
            ${{github.workspace}}/deps/vcpkg/packages
        key: ${{ runner.os }}-build-linux-x64-release-gcc-${{ hashFiles('vcpkg.json') }}

    - name: Configure
      # Configure CMake in a 'build' subdirectory.
      run: cmake -G Ninja --preset linux-x64-release-gcc

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build/linux-x64-release-gcc

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest --test-dir ${{github.workspace}}/build/linux-x64-release-gcc/test --output-on-failure
      
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
