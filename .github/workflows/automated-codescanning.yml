name: Automated Code Scanning

on:
  push:
    branches: [ "develop", "main", "feature/**", "bug/**" ]
  pull_request:
    branches: [ "develop", "main" ]
  schedule:
    - cron: '42 21 * * 2'

permissions:
  actions: read
  contents: read
  security-events: write

jobs:

  ##
  ## CODEQL JOB
  ##

  CodeScanning_CodeQL:
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-22.04' }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    strategy:
      fail-fast: false
      matrix:
        language: [ 'c-cpp' ]

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'true'

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}

    - uses: aminya/setup-cpp@v1
      with:
        compiler: gcc-13
        cmake: true
        ninja: true

    - uses: lukka/run-vcpkg@v11
      with: 
        vcpkgDirectory: '${{github.workspace}}/deps/vcpkg'

    - uses: lukka/run-cmake@v10
      with:
        configurePreset: 'ci-ninja-gcc-linux-x86_64-release'

    - uses: lukka/run-cmake@v10
      with:
        buildPreset: 'ci-ninja-gcc-linux-x86_64-release'

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        upload: false # disable the upload here - results are uploaded in a different action
        output: sarif-results
        category: "/language:${{matrix.language}}"

    - name: filter-sarif
      uses: advanced-security/filter-sarif@v1
      with:
        patterns: |
          -**/*          # Deny all items
          src/**/*       # Add items in the "src" folder
        input: sarif-results/${{ matrix.language }}.sarif
        output: sarif-results/${{ matrix.language }}.sarif

    - name: Upload SARIF
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: sarif-results/${{ matrix.language }}.sarif

  ##
  ## SONARCLOUD JOB
  ##

  CodeScanning_SonarCloud:
    runs-on: ubuntu-22.04
    env:
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
        submodules: 'true'

    - name: Install sonar-scanner and build-wrapper
      uses: sonarsource/sonarcloud-github-c-cpp@v2

    - uses: aminya/setup-cpp@v1
      with:
        compiler: gcc-13
        cmake: true
        ninja: true
        gcovr: true
        python: true # Dependency for gcovr and SonarCloud

    - uses: lukka/run-vcpkg@v11
      with: 
        vcpkgDirectory: '${{github.workspace}}/deps/vcpkg'

    - uses: lukka/run-cmake@v10
      with:
        configurePreset: 'ci-ninja-gcc-linux-x86_64-coverage'
        configurePresetAdditionalArgs: "['-DUSE_SONARQUBE=ON']"

    - name: Run build-wrapper
      run: |
        build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} cmake --build . --preset=ci-ninja-gcc-linux-x86_64-coverage

    - name: Run sonar-scanner
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        sonar-scanner \
            -Dproject.settings="${{github.workspace}}/sonar-project.properties" \
            -Dsonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}" \
            -Dsonar.coverageReportPaths="${{github.workspace}}/build/ci-ninja-gcc-linux-x86_64-coverage/coverage-testaqualink-automate.xml"

  ##
  ## MSVC CODE ANALYSIS JOB
  ##

  CodeScanning_MSVCCodeAnalysis:
    runs-on: windows-2022
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'true'

    - uses: aminya/setup-cpp@v1
      with:
        compiler: msvc
        vcvarsall: true
        cmake: true
        ninja: true

    - uses: lukka/run-vcpkg@v11
      with: 
        vcpkgDirectory: '${{github.workspace}}/deps/vcpkg'

    - uses: lukka/run-cmake@v10
      with:
        configurePreset: 'ci-ninja-msvc-windows-x64-release'
        buildPreset: 'ci-ninja-msvc-windows-x64-release'

    - uses: microsoft/msvc-code-analysis-action@v0.1.1
      id: run-analysis
      with:
        cmakeBuildDirectory: ${{github.workspace}}/build/ci-ninja-msvc-windows-x64-release
        buildConfiguration: Release
        ruleset: NativeRecommendedRules.ruleset
        ignoredPaths: ${{github.workspace}}/deps;${{github.workspace}}/src/version;${{github.workspace}}/test

    - name: Upload SARIF to GitHub
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: ${{ steps.run-analysis.outputs.sarif }}

    - name: Upload SARIF as an Artifact
      uses: actions/upload-artifact@v2
      with:
        name: sarif-file
        path: ${{ steps.run-analysis.outputs.sarif }}
