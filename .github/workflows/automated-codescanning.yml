name: Automated Code Scanning

on:
  push:
    branches: [ "develop", "main", "feature/**", "bug/**" ]
  pull_request:
    branches: [ "develop", "main" ]
  schedule:
    - cron: '42 21 * * 2'

permissions:
  actions: read
  contents: read
  security-events: write

jobs:

  ##
  ## CODEQL JOB
  ##

  CodeScanning_CodeQL:
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-22.04' }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    strategy:
      fail-fast: false
      matrix:
        language: [ 'c-cpp' ]

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'true'

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}

    - uses: aminya/setup-cpp@v1
      with:
        compiler: gcc-13
        vcvarsall: false
        cmake: true
        ninja: true
        vcpkg: false
        ccache: false
        clangtidy: false
        cppcheck: false
        doxygen: false
        gcovr: false
        make: false
        task: false
        nala: false

    - uses: lukka/run-vcpkg@v11
      with: 
        vcpkgDirectory: '${{github.workspace}}/deps/vcpkg'

    - uses: lukka/run-cmake@v10
      with:
        configurePreset: 'ci-gcc-linux-x86_64'

    - uses: lukka/run-cmake@v10
      with:
        buildPreset: 'ci-gcc-linux-x86_64'

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"

  ##
  ## SONARCLOUD JOB
  ##

  CodeScanning_SonarCloud:
    runs-on: ubuntu-22.04
    env:
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
        submodules: 'true'

    - name: Install sonar-scanner and build-wrapper
      uses: sonarsource/sonarcloud-github-c-cpp@v2

    - uses: aminya/setup-cpp@v1
      with:
        compiler: gcc-13
        vcvarsall: false
        cmake: true
        ninja: true
        vcpkg: false
        ccache: false
        clangtidy: false
        cppcheck: false
        doxygen: false
        gcovr: false
        make: false
        task: false
        nala: false

    - uses: lukka/run-vcpkg@v11
      with: 
        vcpkgDirectory: '${{github.workspace}}/deps/vcpkg'

    - uses: lukka/run-cmake@v10
      with:
        configurePreset: 'ci-gcc-linux-x86_64'

    - name: Run build-wrapper
      run: |
        build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} cmake --build . --preset=ci-gcc-linux-x86_64

    - name: Run sonar-scanner
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        sonar-scanner -Dproject.settings="${{github.workspace}}/sonar-project.properties" -Dsonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}"

  ##
  ## MSVC CODE ANALYSIS JOB
  ##

  CodeScanning_MSVCCodeAnalysis:
    runs-on: windows-2022
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'true'   

    - name: Fix MSVC 14.35 vs. 14.37 on GH CI
      # See GH runner issue https://github.com/actions/runner-images/issues/8259.
      run: |
        Set-Location "C:\Program Files (x86)\Microsoft Visual Studio\Installer\"
        $InstallPath = "C:\Program Files\Microsoft Visual Studio\2022\Enterprise"
        $componentsToRemove= @(
            "Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM"
            "Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM.Spectre"
            "Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64"
            "Microsoft.VisualStudio.Component.VC.14.35.17.5.ARM64.Spectre"
            "Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64"
            "Microsoft.VisualStudio.Component.VC.14.35.17.5.x86.x64.Spectre"
            "Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL"
            "Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.Spectre"
            "Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM"
            "Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM.Spectre"
            "Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64"
            "Microsoft.VisualStudio.Component.VC.14.35.17.5.ATL.ARM64.Spectre"
            "Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC"
            "Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.Spectre"
            "Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM"
            "Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM.Spectre"
            "Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64"
            "Microsoft.VisualStudio.Component.VC.14.35.17.5.MFC.ARM64.Spectre"
        )
        [string]$workloadArgs = $componentsToRemove | ForEach-Object {" --remove " +  $_}
        $Arguments = ('/c', "vs_installer.exe", 'modify', '--installPath', "`"$InstallPath`"",$workloadArgs, '--quiet', '--norestart', '--nocache')
        # should be run twice
        $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden
        $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden

    - uses: aminya/setup-cpp@v1
      with:
        compiler: msvc
        vcvarsall: true
        cmake: true
        ninja: true
        vcpkg: false
        ccache: false
        clangtidy: false
        cppcheck: false
        doxygen: false
        gcovr: false
        make: false
        task: false
        nala: false

    - uses: lukka/run-vcpkg@v11
      with: 
        vcpkgDirectory: '${{github.workspace}}/deps/vcpkg'

    - uses: lukka/run-cmake@v10
      with:
        configurePreset: 'ci-msvc-windows-x86_64'

    - uses: microsoft/msvc-code-analysis-action@v0.1.1
      id: run-analysis
      with:
        cmakeBuildDirectory: ${{github.workspace}}/build/ci-msvc-windows-x86_64
        buildConfiguration: Release
        ruleset: NativeRecommendedRules.ruleset
        ignoredPaths: ${{github.workspace}}/deps;${{github.workspace}}/src/version;${{github.workspace}}/test

    - name: Upload SARIF to GitHub
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: ${{ steps.run-analysis.outputs.sarif }}

    - name: Upload SARIF as an Artifact
      uses: actions/upload-artifact@v2
      with:
        name: sarif-file
        path: ${{ steps.run-analysis.outputs.sarif }}