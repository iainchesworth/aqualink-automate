name: CMake

on:
  push:
    branches: [ "develop", "main" ]
  pull_request:
    branches: [ "develop", "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [macos-latest, windows-latest, ubuntu-latest]
        os: [ubuntu-latest, windows-latest]
        include:
        - os: ubuntu-latest
          BUILD_PRESET: linux-x64-release-clang
          CMAKE_C_COMPILER: /usr/lib/llvm-16/bin/clang
          CMAKE_CXX_COMPILER: /usr/lib/llvm-16/bin/clang++
        - os: windows-latest
          BUILD_PRESET: windows-x64-release-msvc

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'true'

    - uses: actions/cache@v3
      with :
        path: |
            ${{github.workspace}}/deps/vcpkg/buildtrees
            ${{github.workspace}}/deps/vcpkg/downloads
            ${{github.workspace}}/deps/vcpkg/packages
        key: ${{ runner.os }}-build-${{ matrix.BUILD_PRESET }}-${{ hashFiles('vcpkg.json') }}

    - if: matrix.os == 'ubuntu-latest'
      run: |
        # Install the LLVM (clang-16) toolchain as well as the latest cmake.
        wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | sudo tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null
        echo 'deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ jammy main' | sudo tee /etc/apt/sources.list.d/kitware.list >/dev/null
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        sudo add-apt-repository -y 'deb http://apt.llvm.org/jammy/  llvm-toolchain-jammy-16 main'
        sudo apt update
        sudo apt install -y build-essential ca-certificates cmake curl git gpg linux-libc-dev ninja-build pkg-config wget unzip zip
        sudo apt install -y cmake 
        sudo apt install -y clang-16 clang-tools-16 clang-16-doc libclang-common-16-dev libclang-16-dev libclang1-16 clang-format-16 python3-clang-16 clangd-16 clang-tidy-16 lld-16 libc++-16-dev libc++abi-16-dev clang-tidy-16
        sudo update-alternatives --install /usr/bin/cc cc /usr/bin/clang-16 50
        sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang++-16 50
        sudo update-alternatives --install /usr/bin/ld ld /usr/bin/lld-16 50

    - uses: ashutoshvarma/setup-ninja@master
    - uses: ilammy/msvc-dev-cmd@v1

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory.
      run: cmake -G Ninja -B ${{github.workspace}}/build --preset ${{matrix.BUILD_PRESET}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest --test-dir ${{github.workspace}}/build/test --output-on-failure
