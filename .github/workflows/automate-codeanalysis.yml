name: Automated Code Analysis

on: 
  workflow_run:
    workflows: [ "Automated CI" ]
    types: [ completed ]

permissions:
  security-events: write
  actions: read
  contents: read

jobs:
  analysis_job_CodeQL:
    name: "CodeQL (on Linux)"
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: cpp

      - name: Install Linux Dependencies i.e. Build Tools
        run: |
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt update
          sudo apt install -y build-essential ca-certificates cmake curl git gpg linux-libc-dev pkg-config rpm wget unzip zip
          sudo apt install -y gcc-13 g++-13

      - uses: lukka/get-cmake@latest

      - uses: lukka/run-vcpkg@v11
        with: 
          vcpkgDirectory: '${{github.workspace}}/deps/vcpkg'

      - uses: lukka/run-cmake@v10
        with:
          configurePreset: 'ci-gcc-linux-x86_64'
          buildPreset: 'ci-gcc-linux-x86_64'
      
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
  
  analysis_job_MSCodeScanning:
    name: "MS C++ Code Analysis (on Windows)"
    runs-on: windows-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
    
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          toolset: 14.36

      - uses: lukka/get-cmake@latest

      - uses: lukka/run-vcpkg@v11
        with: 
          vcpkgDirectory: '${{github.workspace}}/deps/vcpkg'

      - uses: lukka/run-cmake@v10
        with:
          configurePreset: 'ci-msvc-windows-x86_64'
          buildPreset: 'ci-msvc-windows-x86_64'

      - name: Initialize MSVC Code Analysis
        uses: microsoft/msvc-code-analysis-action@04825f6d9e00f87422d6bf04e1a38b1f3ed60d99
        id: run-analysis
        with:
          cmakeBuildDirectory: ${{github.workspace}}/build/ci-msvc-windows-x86_64
          buildConfiguration: ci-msvc-windows-x86_64
          ruleset: NativeRecommendedRules.ruleset
          ignoredPaths: ${{github.workspace}}/deps;${{github.workspace}}/test

      - name: Upload SARIF to GitHub
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{steps.run-analysis.outputs.sarif}}

      - name: Upload SARIF as an Artifact
        uses: actions/upload-artifact@v2
        with:
          name: sarif-file
          path: ${{steps.run-analysis.outputs.sarif}}
